// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

enum UserRole {
  ADMIN
  MANAGER
}

enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERY
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?  @db.VarChar(255)
  email     String?  @db.VarChar(255)
  password  String?  @db.VarChar(255)
  role      UserRole @default(ADMIN)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean  @default(false)
  Order     Order[]
}

model Customer {
  id        Int         @id @default(autoincrement())
  name      String      @db.VarChar(255)
  phone     String?     @db.VarChar(255)
  email     String?     @db.VarChar(255)
  address   String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  isDeleted Boolean     @default(false)
  Order     Order[]
  OrderItem OrderItem[]
}

model Product {
  id        Int         @id @default(autoincrement())
  code      String      @db.VarChar(255)
  name      String      @db.VarChar(255)
  price     Float
  stock     Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  isDeleted Boolean     @default(false)
  OrderItem OrderItem[]
}

model Order {
  id         Int         @id @default(autoincrement())
  customer   Customer?   @relation(fields: [customerId], references: [id])
  customerId Int?
  orderDate  DateTime?
  totalPrice Int
  user       User?       @relation(fields: [createdBy], references: [id])
  status     OrderStatus @default(PENDING)
  createdBy  Int?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  isDeleted  Boolean     @default(false)
  OrderItem  OrderItem[]
}

model OrderItem {
  id         Int       @id @default(autoincrement())
  qty        Int
  price      Int
  totalPrice Int
  order      Order?    @relation(fields: [orderId], references: [id])
  orderId    Int?
  product    Product?  @relation(fields: [productId], references: [id])
  productId  Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  isDeleted  Boolean   @default(false)
  Customer   Customer? @relation(fields: [customerId], references: [id])
  customerId Int?
}
